name: Build and Push Docker Image

on:
  push:
    branches:
      - dockerhub  # or your deployment branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }}

      - name: Create Octopus Release
        uses: OctopusDeploy/create-release-action@v3
        with:
          api_key: ${{ secrets.OCTOPUS_API_KEY }}
          server: ${{ secrets.OCTOPUS_SERVER }}
          space: ${{ secrets.OCTOPUS_SPACE }}
          project: "Flask App Deployment"
          release_number: ${{ github.sha }}
          deploy_to: "Production"


      - name: Deploy Octopus Release
        run: |
          curl -X POST "${{ secrets.OCTOPUS_SERVER }}/api/${{ secrets.OCTOPUS_SPACE }}/deployments" \
            -H "X-Octopus-ApiKey: ${{ secrets.OCTOPUS_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "ReleaseId": "'"$(curl -s -H \"X-Octopus-ApiKey: ${{ secrets.OCTOPUS_API_KEY }}\" ${{ secrets.OCTOPUS_SERVER }}/api/${{ secrets.OCTOPUS_SPACE }}/projects/${{ secrets.OCTOPUS_PROJECT }}/releases/${{ github.sha }} | jq -r .Id)"'",
              "EnvironmentId": "'"$(curl -s -H \"X-Octopus-ApiKey: ${{ secrets.OCTOPUS_API_KEY }}\" ${{ secrets.OCTOPUS_SERVER }}/api/${{ secrets.OCTOPUS_SPACE }}/environments | jq -r '.Items[] | select(.Name==\"${{ secrets.OCTOPUS_ENVIRONMENT }}\") | .Id')"'" 
            }'
